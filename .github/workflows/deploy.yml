name: Deploy multiple mdBooks to GitHub Pages

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install latest mdBook
        uses: peaceiris/actions-mdbook@v1
        with:
          mdbook-version: "latest"

      # Simplified matrix definition
      - name: Define book matrix
        id: set-matrix
        run: |
          BOOKS='[
            {"folder": "qr-book", "path": "home"},
            {"folder": "qr-dev", "path": "dev"}, 
            {"folder": "qr-modelling", "path": "modelling"},
            {"folder": "qr-algorithms", "path": "algorithms"}
          ]'
          echo "matrix=$BOOKS" >> $GITHUB_OUTPUT

      # Build each book
      - name: Build all books
        run: |
          mkdir -p _site
          echo '${{ steps.set-matrix.outputs.matrix }}' | jq -c '.[]' | while read -r book; do
            folder=$(echo "$book" | jq -r .folder)
            path=$(echo "$book" | jq -r .path)
            
            echo "üìö Building $folder ‚Üí /$path"
            
            if [ -d "$folder" ] && [ -f "$folder/mdbook.toml" ]; then
              cd "$folder"
              mdbook build
              cd ..
              mkdir -p "_site/$path"
              cp -r "$folder/book/"* "_site/$path/"
              echo "‚úÖ Built $folder to _site/$path"
            else
              echo "‚ö†Ô∏è  Skipping $folder - not found or no mdbook.toml"
            fi
          done

      # Create root redirect
      - name: Create root redirect
        run: |
          cat > _site/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
            <meta http-equiv="refresh" content="0; url=/home/">
            <title>Redirecting...</title>
          </head>
          <body>
            <p>Redirecting to <a href="/home/">main documentation</a>...</p>
          </body>
          </html>
          EOF

      # Upload artifact - FIXED: Use the same name and ensure path exists
      - name: Upload site artifact
        uses: actions/upload-artifact@v4
        with:
          name: pages-site
          path: _site/
          retention-days: 1

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      # Download artifact - FIXED: Ensure we're downloading from the correct workflow
      - name: Download site artifact
        uses: actions/download-artifact@v4
        with:
          name: pages-site
          path: _site

      # Verify download worked
      - name: Verify downloaded site
        run: |
          echo "üìÅ Checking downloaded site structure:"
          ls -la _site/
          if [ -d "_site/home" ]; then
            echo "‚úÖ Successfully downloaded artifact with home book"
          else
            echo "‚ùå Artifact download failed - _site/home not found"
            exit 1
          fi

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
